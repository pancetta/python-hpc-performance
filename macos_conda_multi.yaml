fileset:
  name: files
  copy:
    - input.tmpl
    - main.py

substituteset:
  name: substitute
  iofile: { in: input.tmpl, out: input.ini }
  sub:
    - {source: "#maxtime_per_benchmark#", dest: $maxtime_per_benchmark}
    - {source: "#maxrounds_per_benchmark#", dest: $maxrounds_per_benchmark}
    - {source: "#partype#", dest: $partype}

benchmark:
- name: pybench_macos_conda_corei5_mt
  outpath: bench_run
  comment: JUBE file for running the benchmark suite on my Macbook Pro 2018 (multithreaded)
  parameterset:
    name: param_set
    parameter:
      - {name: maxtime_per_benchmark, type: float,  _: "1E-01"} #comma separated integers must be quoted
      - {name: maxrounds_per_benchmark, type: int, _: "10000"}
      - {name: partype, type: str, _: "multithreaded"}
      - {name: nthreads, type: int, _: "1, 2, 4"}
  step:
    name: sub_step
    shared: shared
    use:
      - param_set #use existing parameterset
      - files #use existing fileset
      - substitute #use existing substituteset
    do:
      - export PYTHONPATH=../../../..:$PYTHONPATH
      - env OMP_NUM_THREADS=$nthreads python main.py --input input.ini
      - cp results.json shared/results_nthreads=${nthreads}.json

- name: pybench_macos_conda_corei5_mpi
  outpath: bench_run
  comment: JUBE file for running the benchmark suite on my Macbook Pro 2018 (MPI)
  parameterset:
    name: param_set
    parameter:
      - { name: maxtime_per_benchmark, type: float,  _: "1E-01" } #comma separated integers must be quoted
      - { name: maxrounds_per_benchmark, type: int, _: "10000" }
      - { name: partype, type: str, _: "mpi" }
      - { name: nranks, type: int, _: "1, 2, 4" }
  step:
    name: sub_step
    shared: shared
    use:
      - param_set #use existing parameterset
      - files #use existing fileset
      - substitute #use existing substituteset
    do:
      - export PYTHONPATH=../../../..:$PYTHONPATH
      - mpirun -np $nranks python main.py --input input.ini
      - cp results.json shared/results_nranks=${nranks}.json